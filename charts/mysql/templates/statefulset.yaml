apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mysql.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "mysql.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mysql.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "mysql.fullname" . }}-headless
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mysql.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
      - name: {{ .Chart.Name }}
        {{- if .Values.persistence.enabled }}
        {{- if .Values.persistence.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
        {{- else}}
        persistentVolumeClaim:
          claimName: {{ include "mysql.fullname" . }}
        {{- end}}
        {{- end}}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - "--ignore-db-dir=lost+found"
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}
              key: rootpass
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Chart.Name }}
              key: userpass
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              name: {{ .Chart.Name }}
              key: DB_USER_NAME
        - name: MYSQL_DATABASE
          valueFrom:
            configMapKeyRef:
              name: {{ .Chart.Name }}
              key: DB_NAME
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: {{ .Chart.Name }}
        ports:
        - name: http
          containerPort: 3306
          protocol: TCP
        # livenessProbe:
        #   exec:
        #     command: ["mysqladmin", "ping"]
        #   initialDelaySeconds: 30
        #   periodSeconds: 10
        #   timeoutSeconds: 5
        # readinessProbe:
        #   exec:
        #     # Check we can execute queries over TCP (skip-networking is off).
        #     command: ["mysql", "-h", "127.0.0.1", "-e", "SELECT 1"]
        #   initialDelaySeconds: 5
        #   periodSeconds: 2
        #   timeoutSeconds: 1
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Chart.Name }}
    spec:
      accessModes: {{ .Values.persistence.accessModes }}
      storageClassName: {{ .Values.persistence.storageClassName }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
      

